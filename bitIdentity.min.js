!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).BitID=e()}(this,(function(){"use strict";var t,e,o=o||new Function("try {return this===window;}catch(e){ return false;}"),r=o();const i="14kxqYv3emHGwf8m6YgSYLQkGCvn9Qrgr9",n="14kxqYv3emHGwf8m6YgSYLQkGCvn9Qrgr91",s=" ".repeat(150),a=Buffer.alloc(70," ");var c="";let u=console.log;class f{static littleEndian(t){t.length%2!=0&&(t="0"+t);let e="";for(let o=t.length-2;o>=0;o-=2){let r=t.substr(o,2);u(r),e+=r}return e}static loadScript(t,e){var o=document.createElement("script");o.type="text/javascript",o.readyState?o.onreadystatechange=function(){"loaded"!=o.readyState&&"complete"!=o.readyState||(o.onreadystatechange=null,e&&e())}:o.onload=function(){e&&e()},o.src=t,document.getElementsByTagName("head")[0].appendChild(o)}static config(t){0==t.debug&&(u=t=>{}),c=t.filepayKey}static gentx(o){return new Promise((r,f)=>{o.pay.to.forEach(t=>{if(t.protocol&&"bitidentity"==t.protocol.toLowerCase()){const o=e.PrivateKey.fromWIF(t.value.privateKey),r=e.PublicKey.fromPrivateKey(o);t.data=[i,r.toString(),s],t.pvalue=t.value,t.value=0}if(t.protocol&&"bitid"==t.protocol.toLowerCase()){const o=e.PrivateKey.fromWIF(t.value.privateKey),r=e.PublicKey.fromPrivateKey(o);t.data=[n,r.toBuffer(),a],t.pvalue=t.value,t.value=0}}),u(o.pay.to),o.api_key=c,t.build(o,(i,n)=>{if(n){u("temp rawtx=",n.toString());let i=this.genData2sign(n);var s=e.crypto.Hash.sha256(e.deps.Buffer.from(i));u("temp hash="+s.toString("hex")),u("temp fee=",n.getFee()),o.pay.to.forEach(t=>{if(t.protocol&&"bitidentity"==t.protocol.toLowerCase()){const o=e.PrivateKey.fromWIF(t.pvalue.privateKey);const r=e.crypto.ECDSA.sign(s,o).toString();t.data[2]=r.concat(" ".repeat(150-r.length)),u("signature=",r),delete t.protocol,delete t.pvalue}if(t.protocol&&"bitid"==t.protocol.toLowerCase()){const o=e.PrivateKey.fromWIF(t.pvalue.privateKey);const r=e.crypto.ECDSA.sign(s,o).toBuffer();t.data[2]=r,delete t.protocol,delete t.pvalue}}),u(o.pay),t.build(o,(t,e)=>{e?(u("rawtx="+e.toString()),u("fee="+e.getFee()),r(e.toString())):f(t)})}else f(i)})})}static verifyID(t){const o=e.Transaction(t),r=this.genData2sign(o),i=this.getBitID(o);u(i);var n=e.crypto.Hash.sha256(e.deps.Buffer.from(r));if(u("verify hash=",n.toString("hex")),i.length>0){for(var s=0;s<i.length;s++){const t=i[s];if(!e.crypto.ECDSA.verify(n,t.sig,t.publicKey))return!1}return!0}return!1}static getBitID(t){"string"==typeof t&&(t=e.Transaction(t));let o=[],r=0;return t.outputs.forEach(t=>{const s=new e.Script.fromBuffer(t._scriptBuffer);s.chunks.length;if(106==s.chunks[1].opcodenum){const t=s.chunks[2].buf.toString();if(t==i||t==n){const i=t==n,a=e.PublicKey.fromString(s.chunks[3].buf.toString(i?"hex":"utf8")),c=e.crypto.Signature.fromString(s.chunks[4].buf.toString(i?"hex":"utf8"));o.push({publicKey:a,sig:c,pos:r})}}r++}),o}static genData2sign(t){let o="";return t.inputs.forEach(t=>{o+=t.prevTxId.toString("hex")+t.outputIndex}),t.outputs.forEach(t=>{const r=new e.Script.fromBuffer(t._scriptBuffer);r.chunks.length;if(106==r.chunks[1].opcodenum){const e=r.chunks[2].buf.toString();if(e==i||e==n){const i=e==n;u("found bitID. PublicKey="+r.chunks[3].buf.toString(i?"hex":"utf8")),o+=r.chunks[3].buf.toString(i?"hex":"utf8")+t._satoshis}else o+=r.toHex()+t._satoshis}else o+=r.toHex()+t._satoshis}),u("data2sign="+o),o}static genScriptFromBitbus(t){let o="";for(var r=0;r<t.len;r++)if(t["s"+r]){let i=0;const n=e.deps.Buffer.from(t["b"+r],"base64").length;if(n>=0&&n<e.Opcode.OP_PUSHDATA1)i=0;else if(n<Math.pow(2,8))i=e.Opcode.OP_PUSHDATA1;else if(n<Math.pow(2,16))i=e.Opcode.OP_PUSHDATA2;else{if(!(n<Math.pow(2,32)))throw new Error("You can't push that much data");i=e.Opcode.OP_PUSHDATA4}i&&(i=i.toString(16),o+=i);let s=n.toString(16);s=this.littleEndian(s),o+=s+t["h"+r]}else if(t["o"+r]){let i=e.Opcode.fromString(t["o"+r]).toHex();i.length<2&&(i="0"+i),o+=i}return o}static genData2signFromBitbus(t){let e="";return t.in.forEach(t=>{e+=t.e.h+t.e.i}),t.out.forEach(t=>{if(t.o1&&"OP_RETURN"==t.o1)if(!t.s2||t.s2!=i&&t.s2!=n)e+=this.genScriptFromBitbus(t)+t.e.v;else{const o=t.s2==n?t.h3:t.s3;u("found bitID. PublicKey="+o),e+=o+t.e.v}else e+=this.genScriptFromBitbus(t)+t.e.v}),u("bitbus data2sign="+e),e}static getBitIDFromBitbus(e){let o=[],r=0;return e.out.forEach(e=>{if("OP_RETURN"==e.o1&&(e.s2==i||e.s2==n)){const i=e.s2==n,s=i?e.h3:e.s3,a=i?e.h4:e.s4,c=t.bsv.PublicKey.fromString(s),u=t.bsv.crypto.Signature.fromString(a);o.push({publicKey:c,sig:u,pos:r})}r++}),o}static verifyIDFromBitbus(r){const i=this.genData2signFromBitbus(r),n=this.getBitIDFromBitbus(r);u(n);let s=null;if(s=(o(),t.bsv.crypto.Hash.sha256(e.deps.Buffer.from(i))),n&&n.length>0){for(let e=0;e<n.length;e++){let o=n[e];if(!t.bsv.crypto.ECDSA.verify(s,o.sig,o.publicKey))return!1}return!0}return!1}}return r?window.filepay?(t=window.filepay,e=t.bsv):f.loadScript("https://unpkg.com/filepay@latest/dist/filepay.min.js",()=>{t=window.filepay,e=t.bsv}):t||(t=require("filepay"),e=t.bsv),r||(module.exports=f),f}));
